/*
 * Human Cell Atlas
 * https://www.humancellatlas.org/
 *
 * Style definitions specific to the HCA data lifecycle diagram component.
 */

/* Hide component */
.dataLifecycle {
  display: none;
}

/* SVG - overflow visible */
.dataLifecycle svg {
  overflow: visible;
}

/* Pointer events 'none' */
/* Default state - text, tooltip, tooltip symbol, card paragraph text, hover overlay */
/* Active state - icon, any immediate groups e.g. 'substateAWS' */
.dataLifecycle text,
.dataLifecycle [id^='tooltip'],
.dataLifecycle [id^='symbol'],
.dataLifecycle .dataLifecycleCard p,
.dataLifecycle rect[id='hoverOverlay'],
.dataLifecycle g[id^='icon/'],
.dataLifecycle .active > g {
  pointer-events: none;
}

/* Pointer events 'all' */
/* Default state - tooltip bounds */
/* Active state - card */
.dataLifecycle [id^='flowPath'] [id^='bounds'],
.dataLifecycle:hover .dataLifecycleCard {
  pointer-events: all;
}

/* Hide */
/* Default state hide - icon, path, card, tooltip, hover overlay, containerValidation */
/* Active state hide - rect 'container' */
.dataLifecycle g[id^='icon/'],
.dataLifecycle path[id^='path'],
.dataLifecycle .dataLifecycleCard,
.dataLifecycle [id^='flowPath'] [id^='tooltip'],
.dataLifecycle rect[id='hoverOverlay'],
.dataLifecycle .active > rect[id^='container'],
.dataLifecycle rect[id='containerValidation'] {
  opacity: 0;
}

/* Show */
/* Active state show - icon, path, card, tooltip, hover overlay */
.dataLifecycle .active g[id^='icon/'],
.dataLifecycle .active path[id^='path'],
.dataLifecycle.hover .dataLifecycleCard,
.dataLifecycle [id^='flowPath'] .active [id^='tooltip'],
.dataLifecycle.hover rect[id='hoverOverlay'] {
  opacity: 1;
}

/* Cursor 'pointer' */
/* Default state - tooltip bounds */
/* Active state - path */
.dataLifecycle [id^='flowPath'] [id^='bounds'],
.dataLifecycle .active path[id^='path'] {
  cursor: pointer;
}

/* Active state - text */
.dataLifecycle .active text {
  fill: var(--white);
}

/* Active state - storage element 'AWS' and 'GCP' container */
.dataLifecycle .active[id='stateStorage'] > g[id^='substate'] > rect {
  fill: #6db7dc;
}

/* Text 'font smoothing' - data curator, substates, flow paths */
.dataLifecycle [id^='flowPath'] text,
.dataLifecycle [id^='stateDataCurator'] text,
.dataLifecycle [id^='substate'] text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Card - outer bounds */
.dataLifecycle .dataLifecycleCard {
  position: absolute;
}

/* Card */
.dataLifecycle .dataLifecycleCard > div {
  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3);
  background-color: var(--white);
  padding: 15px;
  position: absolute;
  width: 212px;
}

/* Card font <p>, <a> */
.dataLifecycle .dataLifecycleCard p,
.dataLifecycle .dataLifecycleCard a {
  font-family: 'Montserrat', sans-serif;
  font-size: 13px;
  font-weight: 300;
  line-height: 16px;
}

/* Card text */
.dataLifecycle .dataLifecycleCard p {
  color: #404041;
  margin-bottom: 0;
}

/* Card link */
.dataLifecycle .dataLifecycleCard a {
  cursor: pointer;
  display: block;
  margin-top: 15px;
}

/**
 * HCA data lifecycle diagram component specific breakpoint
 */
@media screen and (min-width: 818px) {
  /* Show component */
  .dataLifecycle {
    display: block;
    position: relative; /* Positions card */
  }
}
